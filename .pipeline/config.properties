# ---------------------------------------------------------------------------
# define id of cloud foundry credentials (CF_USERNAME & CF_PASSWORD)
# ---------------------------------------------------------------------------
# as configured in Credentials section of Jenkins
cfCredentialsId=CF_CREDENTIAL

# ---------------------------------------------------------------------------

# ---------------------------------------------------------------------------
# define GitHub credentials
# ---------------------------------------------------------------------------
# as configured in Credentials section of Jenkins
#ssh credentials for write access to git (e.g. for versioning)
gitSSHCredentialsId=GitHub_SSH
#"Personal access token" for access to GitHub REST API
#has to be stored in password part of the credentials
githubCredentials=GitHub
# ---------------------------------------------------------------------------

# ---------------------------------------------------------------------------
# define Git information - overwrite Jenkins default
# ---------------------------------------------------------------------------
gitUserName=
gitUserEMail=
# ---------------------------------------------------------------------------

# ---------------------------------------------------------------------------
# define Cloud Access Manager (CAM) credentials
# Note: For productive deployment without CAM Credentials
#       use value of cfCredentialsId also for camCredentialsId
#       and leave camSystemRole empty
# ---------------------------------------------------------------------------
# as configured in Credentials section of Jenkins
camCredentialsId=
# System role for your solution as maintained in SPC
camSystemRole=
usaCAM=false
# ---------------------------------------------------------------------------

# ---------------------------------------------------------------------------
# define PPMS I7P credentials
# ---------------------------------------------------------------------------
# as configured in Credentials section of Jenkins
ppmsCredentialsId=
# ---------------------------------------------------------------------------

# ---------------------------------------------------------------------------
# define xMake build quality "Milestone" or "Release"
# ---------------------------------------------------------------------------
xMakeBuildQuality=Milestone
xMakeNaasReleaseForkRepo=
xMakeShipmentType=indirectshipment
# ---------------------------------------------------------------------------

# ---------------------------------------------------------------------------
# define cloud foundry environment (org, space) including application manifests
# ---------------------------------------------------------------------------
cfApiEndpoint=https://api.cf.sap.hana.ondemand.com
cfOrg=CCRefApp	
cfManifest=manifest-ads.yml

cfIntegrationSpace=ads-integration
cfAccSpace=ads-acceptance
cfPerfSpace=ads-performance

cfProdApiEndpoint=https://api.cf.sap.hana.ondemand.com
cfProdOrg=CCRefApp
cfProdSpace=production
# Technical user to be used for app deployment in prod space 
cfProdUser=p1941898574

smokeTestScript=.pipeline/smokeTest.sh

# Deprecated! can be used instead of Org & Space -> see Cloud Curriculum
#cfProdEnvConfig=environment.yaml
# ---------------------------------------------------------------------------

# ---------------------------------------------------------------------------
# Extension points - name & location of groovy files
# ---------------------------------------------------------------------------
# custom integration tests
extensionIntegrationTestScript=.pipeline/integrationStage.groovy

#securityEnvironment=envs/bulletinboard-integration_muenchhausen.yml
systemTestRepo=https://github.wdf.sap.corp/cc-refapp/cc-bulletinboard-systemtests.git
systemTestProperties=config-integration.properties

# ---------------------------------------------------------------------------
# define cloud foundry application name
# ---------------------------------------------------------------------------
cfAppName=bulletinboard-ads-springboot
# ---------------------------------------------------------------------------

# ---------------------------------------------------------------------------
# define email notification distribution list
# ---------------------------------------------------------------------------
notificationRecipients=c5261232 d035958 c5283172
# ---------------------------------------------------------------------------

# ---------------------------------------------------------------------------
# define Checkmarx project name & groupId
# ---------------------------------------------------------------------------
checkmarxProject=
checkmarxGroupId=b75c657f-55c7-483c-ac76-9589f378fa75
# ---------------------------------------------------------------------------

# ---------------------------------------------------------------------------
# Control execution of OPA tests
# ---------------------------------------------------------------------------
runOpaTests=false
opaTimeout=5
modulesToCheckWithOpa=
# ---------------------------------------------------------------------------

# ---------------------------------------------------------------------------
# Operations-related information
# ---------------------------------------------------------------------------
# Spring Boot by default provides the endpoint /health for health checks
healthCheckUrlAcceptance=https://bulletinboard-ads--ads-acceptance--ccrefapp.cfapps.sap.hana.ondemand.com/actuator/health
healthCheckUrlPerformance=https://bulletinboard-ads--ads-performance--ccrefapp.cfapps.sap.hana.ondemand.com/actuator/health
healthCheckUrlIntegration=https://bulletinboard-ads--ads-integration--ccrefapp.cfapps.sap.hana.ondemand.com/actuator/health
healthCheckUrlProduction=https://bulletinboard-ads--production--ccrefapp.cfapps.sap.hana.ondemand.com/actuator/health
#healthCheckUrlProduction=https://bulletinboard-ads-ads-production.cfapps.sap.hana.ondemand.com/health
# ---------------------------------------------------------------------------

# ---------------------------------------------------------------------------
# Control execution of acceptance tests
# ---------------------------------------------------------------------------
runFunctionalAcceptanceTests=false
accTestUrl=
# git url to repository with acceptance tests. Leave empty if tests are in current repo
accTestRepository=
# ---------------------------------------------------------------------------

# ---------------------------------------------------------------------------
# Control execution of performance tests
# ---------------------------------------------------------------------------
runPerformanceUnitTests=false
runPerformanceJMeterTests=false
perfJMeterTestRepository=
perfJMeterTestUrl=
runPerformanceSUT=false
perfSUTRepository=
perfSUTestUrl=
perfSUTResultCSV=
perfSUTTestCase=
# ---------------------------------------------------------------------------

# ---------------------------------------------------------------------------
# define InfluxDB host
# ---------------------------------------------------------------------------
# host where InfluxDB is installed
# rest of the configuration done in Jenkins system configuration
# use empty string if no InfluxDB is used
influxServer=
# ---------------------------------------------------------------------------

